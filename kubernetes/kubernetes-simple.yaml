#
# This helper pod is such that kubectl-deploy-simple.sh script can access pod-data volume mount
# and update ${random_id}-INGRESS-IP.txt and ${random_id}-DB-IP.txt
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-deployment-fuyuko-simple-helper-${random_id}
  labels:
    app: kubernetes-deployment-fuyuko-simple-helper-${random_id}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-pod-fuyuko-simple-helper-${random_id}
  template:
    metadata:
      labels:
        app: kubernetes-pod-fuyuko-simple-helper-${random_id}
    spec:
      containers:
        - name: kubernetes-fuyuko-simple-helper-${random_id}
          image: ubuntu
          env:
            - name: random_id
              value: ${random_id}
          command:
            - "tail"
          args:
            - "-f"
            - "/dev/null"
          volumeMounts:
            - mountPath: /var/podData
              name: pod-data
          resources:
            requests:
              cpu: 10m
      volumes:
        - name: pod-data
          persistentVolumeClaim:
            claimName: kubernetes-claim-fuyuko-simple

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-deployment-fuyuko-simple-db-${random_id}
  labels:
    app: kubernetes-deployment-fuyuko-simple-db-${random_id}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-pod-fuyuko-simple-db-${random_id}
  template:
    metadata:
      labels:
        app: kubernetes-pod-fuyuko-simple-db-${random_id}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: kubernetes-fuyuko-simple-db-${random_id}
          image: tmjee/fuyuko-db
          imagePullPolicy: Always
          env:
            - name: random_id
              value: ${random_id}
            - name: ingress_ip_file
              value: "/var/podData/${random_id}-INGRESS-IP.txt"
            - name: db_ip_file
              value: "/var/podData/${random_id}-DB-IP.txt"
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/podData/podInfo
              name: pod-info
            - mountPath: /var/podData
              name: pod-data
      volumes:
        - name: pod-info
          downwardAPI:
            items:
              - path: "fuyuko-db-${random_id}-podName"
                fieldRef:
                  fieldPath: metadata.name
        - name: pod-data
          persistentVolumeClaim:
            claimName: kubernetes-claim-fuyuko-simple

---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-deployment-fuyuko-simple-be-${random_id}
  labels:
    app: kubernetes-deployment-fuyuko-simple-be-${random_id}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-pod-fuyuko-simple-be-${random_id}
  template:
    metadata:
      labels:
        app: kubernetes-pod-fuyuko-simple-be-${random_id}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: kubernetes-fuyuko-simple-be-${random_id}
          image: tmjee/fuyuko-be
          imagePullPolicy: Always
          env:
            - name: random_id
              value: ${random_id}
            - name: ingress_ip_file
              value: "/var/podData/${random_id}-INGRESS-IP.txt"
            - name: db_ip_file
              value: "/var/podData/${random_id}-DB-IP.txt"
          ports:
            - containerPort: 8888
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            httpGet:
              port: 8888
              path: /api/v1/heartbeat
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            httpGet:
              port: 8888
              path: /api/v1/heartbeat
          volumeMounts:
            - mountPath: /var/podData/podInfo
              name: pod-info
            - mountPath: /var/podData
              name: pod-data
      volumes:
        - name: pod-info
          downwardAPI:
            items:
              - path: "fuyuko-be-${random_id}-podName"
                fieldRef:
                  fieldPath: metadata.name
        - name: pod-data
          persistentVolumeClaim:
            claimName: kubernetes-claim-fuyuko-simple


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-deployment-fuyuko-simple-fe-${random_id}
  labels:
    app: kubernetes-deployment-fuyuko-simple-fe-${random_id}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-pod-fuyuko-simple-fe-${random_id}
  template:
    metadata:
      labels:
        app: kubernetes-pod-fuyuko-simple-fe-${random_id}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: kubernetes-fuyuko-simple-fe-${random_id}
          image: tmjee/fuyuko-fe
          imagePullPolicy: Always
          env:
            - name: random_id
              value: ${random_id}
            - name: ingress_ip_file
              value: "/var/podData/${random_id}-INGRESS-IP.txt"
            - name: db_ip_file
              value: "/var/podData/${random_id}-DB-IP.txt"
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /var/podData/podInfo
              name: pod-info
            - mountPath: /var/podData
              name: pod-data
      volumes:
        - name: pod-info
          downwardAPI:
            items:
              - path: "fuyuko-fe-${random_id}-podName"
                fieldRef:
                  fieldPath: metadata.name
        - name: pod-data
          persistentVolumeClaim:
            claimName: kubernetes-claim-fuyuko-simple

---

apiVersion: v1
kind: Service
metadata:
  name: kubernetes-service-fuyuko-simple-fe-${random_id}
spec:
  type: NodePort
  selector:
    app: kubernetes-pod-fuyuko-simple-fe-${random_id}
  ports:
    - name: fe-port
      #nodePort: 8887
      port: 8887
      targetPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: kubernetes-service-fuyuko-simple-be-${random_id}
spec:
  type: NodePort
  selector:
    app: kubernetes-pod-fuyuko-simple-be-${random_id}
  ports:
    - name: be-port
      #nodePort: 8888
      port: 8888
      targetPort: 8888

---



apiVersion: v1
kind: Service
metadata:
  name: kubernetes-service-fuyuko-simple-db-${random_id}
spec:
  type: LoadBalancer
  selector:
    app: kubernetes-pod-fuyuko-simple-db-${random_id}
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP


---

# apiVersion: networking.k8s.io/v1beta1
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubernetes-ingress-fuyuko-simple-${random_id}
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    kubernetes.io/ingress.class: nginx
spec:
  backend:
    serviceName: kubernetes-service-fuyuko-simple-fe-${random_id}
    servicePort: 8887
  rules:
    # - host: fuyuko-simple
    - http:
        paths:
          - path: /api/*
            backend:
              serviceName: kubernetes-service-fuyuko-simple-be-${random_id}
              servicePort: 8888
          - path: /*
            backend:
              serviceName: kubernetes-service-fuyuko-simple-fe-${random_id}
              servicePort: 8887

